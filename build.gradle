plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ibm.example.demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}


// Creating Jar file
def mainClassName = "$group" + "." + "DemoApplication"

bootJar {
	mainClassName = "$mainClassName".toString()
}

import java.text.SimpleDateFormat

jar {
	manifest {
		attributes "Implementation-Title": "demo"
		attributes "Implementation-Version": version
		// build date
		def dateFormat = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'")
		def buildDate = dateFormat.format(new Date())
		attributes "Build-Date": "${buildDate}"
		attributes "Description": "${description}"
	}
}

// Build manifest configuration
springBoot {
	buildInfo {
		properties {
			def apiDependency = ""
			for (element in project.configurations.implementation.allDependencies) {
				if (element.group.toString().startsWith("com.cocomat.api")) {
					apiDependency += "$element.name:$element.version, "
				}
			}

			additional = ["APIDependency": "${apiDependency}".toString(), "semVersion": "${version}"]
		}
	}
}
